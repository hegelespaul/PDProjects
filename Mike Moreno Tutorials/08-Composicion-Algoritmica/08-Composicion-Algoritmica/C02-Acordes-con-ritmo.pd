#N canvas 0 22 1920 1036 12;
#X obj 23 370 hip~ 3;
#X obj 23 394 clip~ -1 1;
#X obj 23 418 /~ 2;
#X obj 23 442 dac~ 1 2;
#X obj 159 250 loadbang;
#X obj 159 273 tgl 18 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 159 296 metro 100;
#X obj 159 320 tabwrite~ \$0-scope;
#X obj 23 272 catch~ \$0-output;
#X obj 23 301 *~ 1;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-scope 441 float 0;
#X coords 0 1 440 -1 200 140 1;
#X restore 309 250 graph;
#X obj 23 346 /~ 4;
#X msg 29 159 0 2 4 5 7 9 11;
#X obj 29 183 array set \$0-scale;
#X obj 29 107 array define -k \$0-scale 7;
#A 0 0 2 4 5 7 9 11;
#X text 29 87 Crea array de 7 pasos y guarda sus contenidos (-k);
#X text 29 139 Escala de Do mayor en intervalos tomando Do como referencia.
;
#X obj 600 53 nbx 3 19 30 300 0 1 empty empty BPM 0 -8 0 12 #00ff04
#000000 #000000 120 256;
#X msg 600 77 60000 \$1;
#X obj 600 101 /;
#X obj 600 125 / 4;
#X obj 558 143 tgl 19 0 empty empty empty 17 7 0 10 #00ff04 #000000
#000000 0 1;
#X obj 558 177 metro;
#X floatatom 600 149 5 0 0 0 - - - 0;
#X obj 558 201 bng 19 250 50 0 empty empty empty 17 7 0 10 #faff00
#000000 #000000;
#X obj 558 225 i;
#X obj 598 225 + 1;
#X obj 682 367 change -1;
#X obj 682 391 t b f;
#X obj 744 423 % 4;
#X obj 744 447 sel 0;
#X obj 682 485 bng 19 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 682 509 t b b;
#X obj 682 557 until;
#X obj 728 531 s \$0-new;
#X obj 682 581 t b b;
#X obj 682 697 i;
#X obj 717 696 +;
#X obj 700 633 r \$0-new;
#X msg 700 657 0;
#X obj 700 726 r \$0-new;
#X obj 682 845 +;
#X obj 970 488 poly 6 1;
#X obj 970 512 pack f f f;
#X obj 970 560 /~ 4;
#X obj 970 584 throw~ \$0-output;
#X obj 858 274 t f f;
#X obj 858 308 % 7;
#X obj 858 332 tabread \$0-scale;
#X obj 970 376 +;
#X obj 988 308 div 7;
#X obj 988 332 * 12;
#X obj 744 472 bng 19 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 744 496 s \$0-reset;
#X obj 797 565 r \$0-reset;
#X obj 740 755 r \$0-reset;
#X msg 682 533 4;
#X obj 700 816 random 14;
#X obj 970 453 makenote 127 2000;
#X obj 682 343 div 16;
#X msg 740 779 seed 17686;
#X obj 970 536 clone -s 1 moog-synth~ 6;
#X obj 780 620 random 3;
#X obj 970 424 + 40;
#X obj 779 644 + 3;
#X msg 797 589 seed 11636;
#X text 9 10 Generacion de acordes ––––––;
#X text 19 28 Usando el objeto until con contadores y numeros aleatorios
podemos generar una serie de numeros con intervalos para crear acordes.
;
#X obj 558 249 t f f;
#X obj 682 869 list prepend;
#X obj 793 871 t l;
#X obj 756 840 r \$0-new;
#X obj 560 901 list;
#X obj 560 498 div 2;
#X obj 560 522 change -1;
#X obj 560 656 random 100;
#X obj 560 680 < 50;
#X obj 560 704 sel 1;
#X obj 560 728 bng 19 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 560 925 s \$0-notes;
#X obj 879 86 r \$0-notes;
#X obj 845 148 until;
#X text 944 117 First store list \, then start the loop;
#X text 939 167 "until" bangs its output until told to stop by a "bang"
to its right inlet., f 38;
#X text 949 231 Store the remaining list.;
#X obj 858 231 list store;
#X obj 879 115 t b b l;
#X obj 845 173 f;
#X obj 883 174 + 1;
#X msg 902 148 0, f 2;
#X msg 845 204 get \$1 1;
#X obj 560 546 t b f;
#X obj 609 573 % 8;
#X obj 609 597 sel 0;
#X msg 609 621 seed 1678;
#X text 306 901 Almacena las notas en una lista ->;
#X text 823 870 <- Agrega los numeros a una lista;
#X text 817 839 <- Reinicia la lista;
#X text 651 107 Lanza los numeros uno por uno ->;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 3 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 9 0 11 0;
#X connect 11 0 0 0;
#X connect 12 0 13 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 23 0;
#X connect 21 0 22 0;
#X connect 22 0 24 0;
#X connect 23 0 22 1;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 25 0 68 0;
#X connect 26 0 25 1;
#X connect 27 0 28 0;
#X connect 28 0 31 0;
#X connect 28 1 29 0;
#X connect 29 0 30 0;
#X connect 30 0 52 0;
#X connect 31 0 32 0;
#X connect 32 0 56 0;
#X connect 32 1 34 0;
#X connect 33 0 35 0;
#X connect 35 0 36 0;
#X connect 35 1 62 0;
#X connect 36 0 37 0;
#X connect 36 0 41 0;
#X connect 37 0 36 1;
#X connect 38 0 39 0;
#X connect 39 0 36 1;
#X connect 40 0 57 0;
#X connect 41 0 69 0;
#X connect 42 0 43 0;
#X connect 42 1 43 1;
#X connect 42 2 43 2;
#X connect 43 0 61 0;
#X connect 44 0 45 0;
#X connect 46 0 47 0;
#X connect 46 1 50 0;
#X connect 47 0 48 0;
#X connect 48 0 49 0;
#X connect 49 0 63 0;
#X connect 50 0 51 0;
#X connect 51 0 49 1;
#X connect 52 0 53 0;
#X connect 54 0 65 0;
#X connect 55 0 60 0;
#X connect 56 0 33 0;
#X connect 57 0 41 1;
#X connect 58 0 42 0;
#X connect 58 1 42 1;
#X connect 59 0 27 0;
#X connect 60 0 57 0;
#X connect 61 0 44 0;
#X connect 62 0 64 0;
#X connect 63 0 58 0;
#X connect 64 0 37 1;
#X connect 65 0 62 0;
#X connect 68 0 73 0;
#X connect 68 1 59 0;
#X connect 69 0 70 0;
#X connect 69 0 72 1;
#X connect 70 0 69 1;
#X connect 71 0 69 1;
#X connect 72 0 79 0;
#X connect 73 0 74 0;
#X connect 74 0 91 0;
#X connect 75 0 76 0;
#X connect 76 0 77 0;
#X connect 77 0 78 0;
#X connect 78 0 72 0;
#X connect 80 0 86 0;
#X connect 81 0 87 0;
#X connect 85 0 46 0;
#X connect 85 1 81 1;
#X connect 86 0 81 0;
#X connect 86 1 89 0;
#X connect 86 2 85 1;
#X connect 87 0 88 0;
#X connect 87 0 90 0;
#X connect 88 0 87 1;
#X connect 89 0 87 1;
#X connect 90 0 85 0;
#X connect 91 0 75 0;
#X connect 91 1 92 0;
#X connect 92 0 93 0;
#X connect 93 0 94 0;
#X connect 94 0 75 0;
